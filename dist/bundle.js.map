{"version":3,"file":"bundle.js","mappings":"MAGA,MAAMA,EAAcC,SAASC,cAAc,iBACrCC,EAAkBF,SAASG,iBAAiB,oBAElD,IAAIC,EAEJL,EAAYM,iBAAiB,SAAS,KAClC,IACIC,EADAC,GAAY,EAEhB,IAAK,MAAMC,KAAkBN,GACM,IAA3BM,EAAeC,UACfF,GAAY,EACZH,EAAgBI,EAAeE,OAGlCH,GAKiB,MAAlBH,IACAE,EAAgB,GAEE,MAAlBF,IACAE,EAAgB,GAEE,MAAlBF,IACAE,EAAgB,GAGpBK,EAAeL,IAdXM,MAAM,mBAckB,IAGhC,MAAMC,EAAY,CAAC,WAAY,QAAS,SAAU,UAC5CC,EAAY,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,OAAQ,QAAS,OAAQ,OAEhEC,EAAOf,SAASC,cAAc,QAE9BU,EAAkBL,IACpBS,EAAKC,UAAY,2pBAqBjB,MAAMC,EAAiBjB,SAASC,cAAc,YACxCiB,EAAiBlB,SAASC,cAAc,YAE9C,IAEIkB,EAFAC,EAAU,EACVC,EAAU,EAGdC,cAAcH,GACdA,EAAWI,aAEX,WACIF,IACIA,GAAW,IACXH,EAAeM,YAAc,IAAMH,GAEnCA,EAAU,IACVH,EAAeM,YAAcH,GAE7BA,EAAU,KACVD,IACAH,EAAeO,YAAc,IAAMJ,EACnCC,EAAU,EACVH,EAAeM,YAAc,IAAMH,EAE3C,GAhBmC,KAkBnC,IAAII,EAAa,GAEjB,MAAMC,EAAY1B,SAASC,cAAc,eACzC,IAAK,IAAI0B,EAAI,EAAGA,EAAIrB,EAAeqB,IAAK,CACpC,MAAMC,EAAkBC,KAAKC,MAAMD,KAAKE,SAAWlB,EAAUmB,QACvDC,EAAkBJ,KAAKC,MAAMD,KAAKE,SAAWjB,EAAUkB,QAE7D,IAAIE,EACA,oBACApB,EAAUmB,GACVpB,EAAUe,GACV,OAEJH,EAAWU,KAAKD,EAAaA,EAEjC,CAEA,MAAME,EAAqBX,EAAWY,MAAK,IAAMR,KAAKE,SAAW,KACjE,IAAK,IAAIO,EAAI,EAAGA,EAAIF,EAAmBJ,OAAQM,IAAK,CAChD,MAAMC,EAAWvC,SAASwC,cAAc,OACxCD,EAASE,IAAMhB,EAAWa,GAC1BZ,EAAUgB,YAAYH,GACtBA,EAASI,UAAUC,IAAI,YAC3B,CAEA,MAAMC,EAAY7C,SAASG,iBAAiB,cAM5C2C,YALsB,KAClB,IAAK,MAAMC,KAAYF,EACnBE,EAASN,IAAM,iCACnB,GAEsB,KAED,EAACI,EAAWpB,KACjC,IAAIuB,EAAe,GACfC,EAAe,EACnB,MAAMlC,EAAOf,SAASC,cAAc,QAEpC,IAAK,IAAI0B,EAAI,EAAGA,EAAIkB,EAAUb,OAAQL,IACjBkB,EAAUlB,GAClBtB,iBAAiB,SAAU6C,IAChCA,EAAMC,OAAOV,IAAMhB,EAAWE,GAEzBqB,EAAa,IAGdA,EAAa,GAAKvB,EAAWE,GAEzBqB,EAAa,KAAOA,EAAa,IACjCC,IAEIA,IAAiBxB,EAAWO,OAAS,IAErCjB,EAAKC,UAAY,kwBAerBD,EAAKC,UAAY,0vBAarBgC,EAAe,IArCfA,EAAa,GAAKvB,EAAWE,EAsCjC,GAER,EAGJyB,CAAiBP,EAAWpB,EAAU,C","sources":["webpack://card-game/./src/main.js"],"sourcesContent":["//const container = document.querySelector('.container')\n// import { compareGameCards } from './cards.js'\n\nconst startButton = document.querySelector('.start-button')\nconst containerLevels = document.querySelectorAll('.container-level')\n\nlet selectedLevel\n\nstartButton.addEventListener('click', () => {\n    let isChecked = false\n    let numberOfPairs\n    for (const containerLevel of containerLevels) {\n        if (containerLevel.checked === true) {\n            isChecked = true\n            selectedLevel = containerLevel.value\n        }\n    }\n    if (!isChecked) {\n        alert('Выберите уровень')\n        return\n    }\n\n    if (selectedLevel === '1') {\n        numberOfPairs = 3\n    }\n    if (selectedLevel === '2') {\n        numberOfPairs = 6\n    }\n    if (selectedLevel === '3') {\n        numberOfPairs = 9\n    }\n\n    GamePageRender(numberOfPairs)\n})\n\nconst cardSuits = ['Diamonds', 'Clubs', 'Spades', 'Hearts']\nconst cardRanks = ['6', '7', '8', '9', '10', 'jack', 'queen', 'king', 'ace']\n\nconst body = document.querySelector('body')\n\nconst GamePageRender = (numberOfPairs) => {\n    body.innerHTML = `\n        <div class=\"game-page-container\">\n            <div class=\"timer\">\n                <div class=\"time\">\n                    <span class=\"timer-number minutes\">00.</span>\n                    <span>min</span>\n                </div>\n                <div class=\"time\">\n                    <span class=\"timer-number seconds\">00</span>\n                    <span>sec</span>\n                </div>\n            </div>\n            <div class=\"button\">\n                <button class=\"restart-button\">Начать заново</button>\n            </div>\n        </div>\n        <div class=\"game-container\">\n            <div class=\"game-space\"></div>\n        </div>`\n\n    //Таймер\n    const minutesElement = document.querySelector('.minutes')\n    const secondsElement = document.querySelector('.seconds')\n\n    let minutes = 0\n    let seconds = 0\n    let interval\n\n    clearInterval(interval)\n    interval = setInterval(startTimer, 1000)\n\n    function startTimer() {\n        seconds++\n        if (seconds <= 9) {\n            secondsElement.textContent = '0' + seconds\n        }\n        if (seconds > 9) {\n            secondsElement.textContent = seconds\n        }\n        if (seconds > 60) {\n            minutes++\n            minutesElement.textContent = '0' + minutes\n            seconds = 0\n            secondsElement.textContent = '0' + seconds\n        }\n    }\n\n    let setOfCards = []\n\n    const gameSpace = document.querySelector('.game-space')\n    for (let i = 0; i < numberOfPairs; i++) {\n        const randomCardSuits = Math.floor(Math.random() * cardSuits.length)\n        const randomCardRanks = Math.floor(Math.random() * cardRanks.length)\n\n        let cardElement =\n            '../static/images/' +\n            cardRanks[randomCardRanks] +\n            cardSuits[randomCardSuits] +\n            '.jpg'\n\n        setOfCards.push(cardElement, cardElement)\n        // console.log(setOfCards)\n    }\n\n    const shuffledSetOfCards = setOfCards.sort(() => Math.random() - 0.5)\n    for (let j = 0; j < shuffledSetOfCards.length; j++) {\n        const cardElem = document.createElement('img')\n        cardElem.src = setOfCards[j]\n        gameSpace.appendChild(cardElem)\n        cardElem.classList.add('game-card')\n    }\n\n    const gameCards = document.querySelectorAll('.game-card')\n    const hideGameCards = () => {\n        for (const gameCard of gameCards) {\n            gameCard.src = '../static/images/background.jpg'\n        }\n    }\n    setTimeout(hideGameCards, 5000)\n\n    const compareGameCards = (gameCards, setOfCards) => {\n        let clickedCards = []\n        let matchCounter = 0\n        const body = document.querySelector('body')\n\n        for (let i = 0; i < gameCards.length; i++) {\n            const gameCard = gameCards[i]\n            gameCard.addEventListener('click', (event) => {\n                event.target.src = setOfCards[i]\n\n                if (!clickedCards[0]) {\n                    clickedCards[0] = setOfCards[i]\n                } else {\n                    clickedCards[1] = setOfCards[i]\n\n                    if (clickedCards[0] === clickedCards[1]) {\n                        matchCounter++\n\n                        if (matchCounter === setOfCards.length / 2) {\n                            // alert('Вы выиграли')\n                            body.innerHTML = `\n                                <div class=\"container\">\n                                    <div class=\"container-content\">\n                                        <img src=\"./static/images/celebration.png\">\n                                        <h1 class=\"container-title\">Вы выиграли!</h1>\n                                            <div class=\"time-spent\">\n                                                <h3>Затраченное время:</h3>\n                                                <h2 class=\"time-spent-timer\">01.20</h2>\n                                            </div>\n                                        <button class=\"restart-button\">Начать заново</button>\n                                    </div>\n                                </div>`\n                        }\n                    } else {\n                        // alert('Вы проиграли')\n                        body.innerHTML = `\n                                <div class=\"container\">\n                                    <div class=\"container-content\">\n                                        <img src=\"./static/images/dead.png\">\n                                        <h1 class=\"container-title\">Вы проиграли!</h1>\n                                            <div class=\"time-spent\">\n                                                <h3>Затраченное время:</h3>\n                                                <h2 class=\"time-spent-timer\">01.20</h2>\n                                            </div>\n                                        <button class=\"restart-button\">Начать заново</button>\n                                    </div>\n                                </div>`\n                    }\n                    clickedCards = []\n                }\n            })\n        }\n    }\n\n    compareGameCards(gameCards, setOfCards)\n}\n"],"names":["startButton","document","querySelector","containerLevels","querySelectorAll","selectedLevel","addEventListener","numberOfPairs","isChecked","containerLevel","checked","value","GamePageRender","alert","cardSuits","cardRanks","body","innerHTML","minutesElement","secondsElement","interval","minutes","seconds","clearInterval","setInterval","textContent","setOfCards","gameSpace","i","randomCardSuits","Math","floor","random","length","randomCardRanks","cardElement","push","shuffledSetOfCards","sort","j","cardElem","createElement","src","appendChild","classList","add","gameCards","setTimeout","gameCard","clickedCards","matchCounter","event","target","compareGameCards"],"sourceRoot":""}